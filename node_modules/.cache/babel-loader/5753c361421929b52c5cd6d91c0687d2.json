{"ast":null,"code":"var _jsxFileName = \"/home/marcela/DesafioTecnico/js-test/src/Components/CardDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { getlanguages, getCommits, getLastUpdate, getBranches } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CardDetails = ({\n  card\n}) => {\n  _s();\n\n  console.log(card);\n  const [languages, setLanguages] = useState();\n  const [commits, setCommits] = useState();\n  const [branches, setBranches] = useState();\n  const [lastUpDate, setLastUpDate] = useState();\n  useEffect(async () => {\n    const commits = await getCommits(card.full_name);\n    setCommits(commits.length);\n    const branches = await getBranches(card.full_name);\n    setBranches(branches.length);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"card card-repo\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-details\",\n      children: `Detalhes do repositório ${card.name}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-details\",\n      children: `Quantidade de forks: ${card.forks}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-details\",\n      children: `Quantidade de commits: ${commits}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-details\",\n      children: `Quantidade de branches: ${branches}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-details\",\n      children: `Ultima atualização: ${card.updated_at}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), card.private ? /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-details\",\n      children: \"Reposit\\xF3rio Privado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 8\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-details\",\n      children: \"Reposit\\xF3rio P\\xFAblico\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CardDetails, \"hgdaDaoUD8QrWJA7t211vmhCD4M=\");\n\n_c = CardDetails;\nexport default CardDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardDetails\");","map":{"version":3,"sources":["/home/marcela/DesafioTecnico/js-test/src/Components/CardDetails.jsx"],"names":["React","useState","useEffect","getlanguages","getCommits","getLastUpdate","getBranches","CardDetails","card","console","log","languages","setLanguages","commits","setCommits","branches","setBranches","lastUpDate","setLastUpDate","full_name","length","name","forks","updated_at","private"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,aAAnC,EAAkDC,WAAlD,QAAqE,iBAArE;;;AAGA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,QAAM,CAAEG,SAAF,EAAaC,YAAb,IAA8BX,QAAQ,EAA5C;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,EAAtC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,EAAxC;AACA,QAAM,CAACgB,UAAD,EAAaC,aAAb,IAA8BjB,QAAQ,EAA5C;AAGAC,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMW,OAAO,GAAG,MAAMT,UAAU,CAACI,IAAI,CAACW,SAAN,CAAhC;AACAL,IAAAA,UAAU,CAACD,OAAO,CAACO,MAAT,CAAV;AAEA,UAAML,QAAQ,GAAG,MAAMT,WAAW,CAACE,IAAI,CAACW,SAAN,CAAlC;AACAH,IAAAA,WAAW,CAACD,QAAQ,CAACK,MAAV,CAAX;AAED,GAPQ,EAON,EAPM,CAAT;AAWE,sBACE;AAAS,IAAA,SAAS,EAAC,gBAAnB;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA,gBAAkC,2BAA2BZ,IAAI,CAACa,IAAM;AAAxE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA,gBAAiC,wBAAwBb,IAAI,CAACc,KAAO;AAArE;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA,gBAAiC,0BAA0BT,OAAS;AAApE;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA,gBAAiC,2BAA2BE,QAAU;AAAtE;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA,gBAAiC,uBAAuBP,IAAI,CAACe,UAAY;AAAzE;AAAA;AAAA;AAAA;AAAA,YATF,eAUE;AAAA;AAAA;AAAA;AAAA,YAVF,EAWGf,IAAI,CAACgB,OAAL,gBACA;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,gBAEA;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAtCD;;GAAMjB,W;;KAAAA,W;AAwCN,eAAgBA,WAAhB","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getlanguages, getCommits, getLastUpdate, getBranches } from '../services/api';\n\n\nconst CardDetails = ({ card }) => {\nconsole.log(card);\nconst [ languages, setLanguages ] = useState();\nconst [commits, setCommits] = useState();\nconst [branches, setBranches] = useState();\nconst [lastUpDate, setLastUpDate] = useState();\n\n\nuseEffect(async () => {\n  const commits = await getCommits(card.full_name);\n  setCommits(commits.length);\n\n  const branches = await getBranches(card.full_name);\n  setBranches(branches.length);\n\n}, []);\n\n\n \n  return(\n    <section className=\"card card-repo\">\n      <span className=\"text-details\">{ `Detalhes do repositório ${ card.name }`}</span>\n      <br></br>\n      <span className=\"text-details\">{`Quantidade de forks: ${ card.forks }`}</span>\n      <br></br>\n      <span className=\"text-details\">{`Quantidade de commits: ${ commits }`}</span>\n      <br></br>\n      <span className=\"text-details\">{`Quantidade de branches: ${ branches }`}</span>\n      <br></br>\n      <span className=\"text-details\">{`Ultima atualização: ${ card.updated_at }`}</span>\n      <br></br>\n      {card.private? \n       <span className=\"text-details\">Repositório Privado</span> :\n       <span className=\"text-details\">Repositório Público</span>}\n\n    </section>\n\n  )\n}\n\nexport  default CardDetails;"]},"metadata":{},"sourceType":"module"}